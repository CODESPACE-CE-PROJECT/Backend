name: Deployment

on: 
    push: 
        branches: ['main']
    pull_request:
        branches: ['dev']

jobs:
    sonarqube:
      runs-on: self-hosted
      if: github.event_name == 'pull_request'

      name: Build and Analyze
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0 
        - uses: sonarsource/sonarqube-scan-action@master
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    deploy:
        runs-on: self-hosted
        if: github.event_name == 'push'
        steps:
            - name: Clone Repo ü§ñ
              uses: actions/checkout@v3

            - name: Set Environment Variables üî†
              env: 
                DATABASE_URL: ${{ secrets.DATABASE_URL }}
                JWT_SECRET: ${{ secrets.JWT_SECRET }}
                GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
                GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
                MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
                MINIO_ACCESSKEY: ${{ secrets.MINIO_ACCESSKEY }}
                MINIO_SECRETKEY: ${{ secrets.MINIO_SECRETKEY }}
                MINIO_BUCKET: ${{ secrets.MINIO_BUCKET }}
                ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
                ADMIN_PASS: ${{ secrets.ADMIN_PASS }}
              run: |
                export DATABASE_URL=$DATABASE_URL
                echo $DATABASE_URL
                export JWT_SECRET=$JWT_SECRET
                export GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID
                export GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
                export MINIO_ENDPOINT=$MINIO_ENDPOINT
                export MINIO_ACCESSKEY=$MINIO_ACCESSKEY
                export MINIO_SECRETKEY=$MINIO_SECRETKEY
                export MINIO_BUCKET=$MINIO_BUCKET
                export ADMIN_USERNAME=$ADMIN_USERNAME
                export ADMIN_PASS=$ADMIN_PASS
            
            - name: Clear Cache ü´ß
              run: |
                docker stop backend || true
                docker rm backend || true
                docker rmi backend-backend:latest || true
            
            - name: Run Image ‚úÖ
              run: |
                docker compose -f docker-compose.prod.yaml up -d
            
            - name: Message ‚úâÔ∏è
              uses: fjogeleit/http-request-action@v1
              with:
                timeout: 60000
                url: ${{ secrets.DISCORD_WEBHOOK }}
                method: 'POST'
                customHeaders: '{"Content-Type": "application/json"}'
                data: '{"content": "CEPP Backend Build ‚úÖ","embeds": [{"title": "Backend url","description": "https://codespace-api.unixvextor.com"}]}'