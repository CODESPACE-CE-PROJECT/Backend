name: Deployment

on: 
    push: 
        branches: ['main']
    pull_request:
        branches: ['dev']

jobs:
    sonarqube:
      runs-on: self-hosted
      if: github.event_name == 'pull_request'

      name: Build and Analyze
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0 
        - uses: sonarsource/sonarqube-scan-action@master
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    deploy:
        runs-on: self-hosted
        if: github.event_name == 'push'
        steps:
            - name: Clone Repo ü§ñ
              uses: actions/checkout@v3

            - name: Set Environment
              run: |
                export DATABASE_URL=${{secrets.DATABASE_URL}}
                export JWT_SECRET=${{secrets.JWT_SECRET}}
                export GOOGLE_CLIENT_ID=${{secrets.GOOGLE_CLIENT_ID}}
                export GOOGLE_CLIENT_SECRET=${{secrets.GOOGLE_CLIENT_SECRET}}
                export MINIO_ENDPOINT=${{secrets.MINIO_ENDPOINT}}
                export MINIO_ACCESSKEY=${{secrets.MINIO_ACCESSKEY}}
                export MINIO_SECRETKEY=${{secrets.MINIO_SECRETKEY}}
                export MINIO_BUCKET=${{secrets.MINIO_BUCKET}}
                export ADMIN_USERNAME=${{secrets.ADMIN_USERNAME}}
                export ADMIN_PASS=${{secrets.ADMIN_PASS}}
            
            - name: Clear Cache ü´ß
              run: |
                docker stop backend || true
                docker rm backend || true
                docker rmi backend-backend:latest || true
            
            - name: Run Image ‚úÖ
              run: |
                docker compose -f docker-compose.prod.yaml up -d
            
            - name: Message ‚úâÔ∏è
              uses: fjogeleit/http-request-action@v1
              with:
                timeout: 60000
                url: ${{ secrets.DISCORD_WEBHOOK }}
                method: 'POST'
                customHeaders: '{"Content-Type": "application/json"}'
                data: '{"content": "CEPP Backend Build ‚úÖ","embeds": [{"title": "Backend url","description": "https://codespace-api.unixvextor.com"}]}'